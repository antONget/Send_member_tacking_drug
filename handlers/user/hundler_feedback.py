import datetime

from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import F, Router, Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from utils.error_handling import error_handler
from config_data.config import Config, load_config
from database import requests as rq
from database.models import Drug, User
from utils.send_admins import send_message_admins_text
import logging

router = Router()
config: Config = load_config()


class StateFeedBack(StatesGroup):
    feedback = State()


@router.callback_query(F.data.startswith('feedback_'))
@error_handler
async def process_feedback(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """
    –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    :param callback:
    :param state:
    :param bot:
    :return:
    """
    logging.info('process_feedback')
    drug_id = int(callback.data.split('_')[-1])
    await state.update_data(feedback_drug_id=drug_id)
    info_drug: Drug = await rq.get_drug_id(drug_id=drug_id)
    taste_drug = info_drug.taste_drug
    volume_drug = info_drug.volume_drug
    taste = '–≥—Ä–µ–π–ø—Ñ—Ä—É—Ç–∞'
    if taste_drug == 'limon':
        taste = '–ª–∏–º–æ–Ω–∞'
    elif taste_drug == 'orange':
        taste = '–∞–ø–µ–ª—å—Å–∏–Ω–∞'
    await callback.message.edit_text(text=f'–ü—Ä–∏—à–ª–∏—Ç–µ –æ—Ç–∑—ã–≤ –∑–∞ –ø—Ä–∏–µ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞: Collagen Jelly PP Lab —Å–æ –≤–∫—É—Å–æ–º {taste}'
                                          f' - {volume_drug} —Å–∞—à–µ',
                                     reply_markup=None)
    await state.set_state(StateFeedBack.feedback)
    await callback.answer()


@router.message(F.text == '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
@error_handler
async def process_feedback(message: Message, state: FSMContext, bot: Bot):
    """
    –û—Ç–∑—ã–≤
    :param message:
    :param state:
    :param bot:
    :return:
    """
    logging.info('process_feedback')
    await message.answer(text=f'1. –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥—É–∫—Ç–µ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ, –≥–¥–µ –±—ã–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞.\n'
                                 f'2. –ü—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞ ‚§µÔ∏è\n'
                                 f'3. –í –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ —É–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ü–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ'
                                 f' –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ãüéÅ.')
    await state.set_state(StateFeedBack.feedback)


@router.message(StateFilter(StateFeedBack.feedback))
@error_handler
async def get_feedback(message: Message, state: FSMContext, bot: Bot):
    """
    –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤
    :param message:
    :param state:
    :param bot:
    :return:
    """
    logging.info('get_feedback')
    photo = message.photo
    if photo:
        photo = message.photo[-1].file_id
    else:
        await message.answer(text='–ú—ã –∂–¥–µ–º –æ—Ç –≤–∞—Å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞')
        return

    drugs_user: list[Drug] = await rq.get_drug_last_tg_id(tg_id=message.from_user.id)
    if drugs_user:
        feedback_drug_id = drugs_user[-1].id
        info_drug: Drug = await rq.get_drug_id(drug_id=feedback_drug_id)
        info_user: User = await rq.get_user_by_id(tg_id=info_drug.tg_id)
        data_feedback = {
            "tg_id": message.from_user.id,
            "drug_id": feedback_drug_id,
            "feedback": photo
        }
        await rq.add_feed_back(data=data_feedback)
        taste_drug = info_drug.taste_drug
        volume_drug = info_drug.volume_drug
        taste = '–≥—Ä–µ–π–ø—Ñ—Ä—É—Ç–∞'
        if taste_drug == 'limon':
            taste = '–ª–∏–º–æ–Ω–∞'
        elif taste_drug == 'orange':
            taste = '–∞–ø–µ–ª—å—Å–∏–Ω–∞'
        button_1 = InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                                      callback_data=f'adminfeedback_confirm_{message.from_user.id}')
        button_2 = InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å',
                                      callback_data=f'adminfeedback_—Å—Ñ—Ç—Å—É–¥_{message.from_user.id}')
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button_1], [button_2]])
        await bot.send_photo(photo=photo,
                             chat_id=config.tg_bot.group_id,
                             caption=f'–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                                     f' <a href="https://t.me/userid?id={info_drug.tg_id}">{info_user.fullname}</a> '
                                     f'–ø–æ–ª—É—á–µ–Ω –æ—Ç–∑—ã–≤ –ø–æ –∫—É—Ä—Å –ø—Ä–∏–µ–º–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞.\n\n'
                                     f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–µ:</b>\n'
                                     f'–ù–∞–∑–≤–∞–Ω–∏–µ: Collagen Jelly PP Lab —Å–æ –≤–∫—É—Å–æ–º {taste} - {volume_drug} —Å–∞—à–µ\n'
                                     f'–ú–µ—Å—Ç–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è: {info_drug.marketplace}\n'
                                     f'–ö—É—Ä—Å –ø—Ä–∏–µ–º–∞ —Å {info_drug.data_start_tacking}\n'
                                     f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:</b>\n'
                                     f'–ò–º—è: {info_user.fullname}\n'
                                     f'–í–æ–∑—Ä–∞—Å—Ç: {info_user.age}\n'
                                     f'–ë–∞–ª–∞–Ω—Å: {info_user.balance_user} –±–∞–ª–ª–æ–≤',
                             reply_markup=keyboard)
        await message.answer(text=f'‚ú®–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.')
