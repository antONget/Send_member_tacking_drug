from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from aiogram import F, Router, Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from keyboards.user import keyboard_registration as kb
from utils.error_handling import error_handler

from utils.message_day_tacking_drug import message_day_volume
from database import requests as rq
from database.models import Drug, TakingDrug, User
from config_data.config import Config, load_config
import logging

router = Router()
config: Config = load_config()


class StateRegistration(StatesGroup):
    fullname = State()
    age = State()


@router.callback_query(F.data.startswith('collagen'))
@error_handler
async def process_start_yes(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """
    –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    :param callback:
    :param state:
    :param bot:
    :return:
    """
    logging.info('process_start_yes')
    drug_id = int(callback.data.split('_')[-1])
    await rq.set_drug_intake(drug_id=drug_id,
                             intake=1)
    data_taking_drug = {"tg_id": callback.from_user.id,
                        "drag_id": drug_id,
                        "bonus": 50}
    await rq.add_taking_drug(data=data_taking_drug)
    drug_info: Drug = await rq.get_drug_id(drug_id=drug_id)
    await rq.set_user_balance(tg_id=drug_info.tg_id,
                              balance=50)
    await rq.set_drug_balance(drug_id=drug_info.id,
                              balance=50)
    tacking_drugs: list[TakingDrug] = await rq.get_taking_drug_id(drag_id=drug_info.id)
    day = drug_info.start_day
    if tacking_drugs:
        day += len(tacking_drugs)
    dict_message: dict = await message_day_volume(day=day,
                                                  volume=drug_info.volume_drug)
    user_info: User = await rq.get_user_by_id(tg_id=drug_info.tg_id)
    await callback.message.edit_media(media=InputMediaPhoto(media=dict_message["image_id"],
                                                            caption=f'<b>–î–µ–Ω—å: {day}.</b>\n\n'
                                                                    f'{dict_message["pozitive"]}\n\n'
                                                                    f'–í–∞—à –±–∞–ª–∞–Ω—Å: {user_info.balance_user} –±–∞–ª–ª–æ–≤'),
                                      reply_markup=None)
    if drug_info.volume_drug == (drug_info.start_day + len(tacking_drugs)):
        await rq.set_drug_status(drug_id=drug_id,
                                 status=rq.StatusDrug.completed)
        button = InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤',
                                      callback_data=f'feedback_{drug_info.id}')
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button]])
        await bot.send_message(chat_id=drug_info.tg_id,
                               text='ü§ù–ë–ª–∞–≥–æ–¥–∞—Ä—é –≤–∞—Å –∑–∞ –≤—ã–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ü–∏–∏ PP Lab –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏'
                                    ' —Å–≤–æ–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è. –ï—Å–ª–∏ –≤—ã —Å–æ–±–ª—é–¥–∞–ª–∏ –≤—Å–µ –º–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏'
                                    ' –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–ª–∏—Å—å –≥—Ä–∞—Ñ–∏–∫–∞, —Ç–æ —É–∂–µ –º–æ–≥–ª–∏ –∑–∞–º–µ—Ç–∏—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ'
                                    ' –≤–ª–∏—è–Ω–∏–µ –∫–æ–ª–ª–∞–≥–µ–Ω–∞ –Ω–∞ –≤–∞—à–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏ –≤–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.\n\n'
                                    '<b>–ú–Ω–µ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å —É–∑–Ω–∞—Ç—å –æ–± —ç—Ç–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö. –ü–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –ª–∏ –≤—ã'
                                    ' –ø—Ä–∏–ª–∏–≤ —ç–Ω–µ—Ä–≥–∏–∏, —É–ª—É—á—à–∏–ª–æ—Å—å –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∂–∏ –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â–µ –ø—Ä–∏—è—Ç–Ω–æ'
                                    ' –≤–∞—Å —É–¥–∏–≤–∏–ª–æ? –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–º.</b>\n\n'
                                    '1. –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥—É–∫—Ç–µ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ, –≥–¥–µ –±—ã–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞.\n'
                                    '2. –ü—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞ ‚§µÔ∏è\n'
                                    '3. –í –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ —É–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ü–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ'
                                    ' –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ãüéÅ.',
                               reply_markup=keyboard)
    await callback.answer()
