from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, StateFilter, or_f, CommandObject
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove, PreCheckoutQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from keyboards import start_keyboard as kb
from config_data.config import Config, load_config
from database import requests as rq
from database.models import User
from utils.error_handling import error_handler
from filter.admin_filter import check_super_admin

import logging
from datetime import datetime

router = Router()
config: Config = load_config()


class PersonalData(StatesGroup):
    fullname = State()
    personal_account = State()
    phone = State()


@router.message(CommandStart())
@error_handler
async def process_start_command_user(message: Message, state: FSMContext, command: CommandObject, bot: Bot) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏–ª–∏ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã /start
    :param message:
    :param state:
    :param command:
    :param bot:
    :return:
    """
    logging.info(f'process_start_command_user: {message.chat.id}')
    await state.set_state(state=None)
    qr = command.args
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –µ—Å–ª–∏ –µ—â–µ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    user: User = await rq.get_user_by_id(tg_id=message.from_user.id)
    if not user:
        if message.from_user.username:
            username = message.from_user.username
        else:
            username = "user_name"
        data_user = {"tg_id": message.from_user.id,
                     "username": username,
                     "qr": qr}
        await rq.add_user(data=data_user)
    else:
        if message.from_user.username:
            username = message.from_user.username
        else:
            username = "user_name"
        data_user = {"tg_id": message.from_user.id,
                     "username": username,
                     "qr": qr}
        await rq.add_user(data=data_user)
    if await check_super_admin(telegram_id=message.from_user.id):
        await message.answer(text='PP Lab Bot ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫—Ä–∞—Å–æ—Ç—ã –∏ –∑–¥–æ—Ä–æ–≤—å—è –∏–∑–Ω—É—Ç—Ä–∏. '
                                  '–Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –∫–æ–ª–ª–∞–≥–µ–Ω–∞'
                                  ' –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—Å –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏üôè.\n'
                                  '<b>–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞</b>',
                             reply_markup=kb.keyboard_start_admin())
    else:
        await message.answer(text='PP Lab Bot ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫—Ä–∞—Å–æ—Ç—ã –∏ –∑–¥–æ—Ä–æ–≤—å—è –∏–∑–Ω—É—Ç—Ä–∏. '
                                  '–Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –ø—Ä–∏–µ–º–µ –∫–æ–ª–ª–∞–≥–µ–Ω–∞'
                                  ' –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—Å –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏üôè.',
                             reply_markup=kb.keyboard_start_())
    await message.answer(text='–ù–∞–∂–º–∏—Ç–µ ‚Äú–î–∞‚Äù, –µ—Å–ª–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∏–µ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞.',
                         reply_markup=kb.keyboard_start())
